/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
https://gltf.pmnd.rs/
*/

import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GroupProps } from '@react-three/fiber';
import { Mesh, Material, BufferGeometry } from 'three';

interface ModelProps extends GroupProps {}

interface GLTFResult {
  nodes: {
    Suzanne: Mesh<BufferGeometry>;
  };
  materials: {
    [key: string]: Material;
  };
}

 const MeshModel: React.FC =(props: ModelProps) => {
  const { nodes, materials } = useGLTF('/scene.gltf', true) as unknown as GLTFResult;
  
  if (!nodes || !materials) {
    console.error('Error loading GLTF file: /scene.gltf');
    return null;
  }

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Suzanne.geometry}
        material={nodes.Suzanne.material}
        position={[0, 0.189, -0.043]}
      />
    </group>
  );
}

useGLTF.preload('/scene.gltf');
export default MeshModel